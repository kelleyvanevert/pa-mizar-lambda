{"name":"pa-mizar-lambda","tagline":"A basic Mizar formalization of the lambda calculus","body":"## A Mizar formalization of lambda terms, beta reduction and conversion\r\n\r\nThis is a small formalization project for Freek's [course](cs.ru.nl/~freek/courses/pa-2013/) on proof assistants. For the exercise description, refer to [exercise-mizar.pdf](exercise-mizar.pdf?raw=true).\r\n\r\n* Mizar version: 7.12.01\r\n* MML version: 4.166.1132\r\n\r\n### `TL;DR` Contents of the formalization\r\n\r\n* __Lambda terms__ are encoded as their abstract syntax trees, with named (natural number) variables, as a mode `LambdaTerm` = `LambdaTerm-like DecoratedTree of NAT`.\r\n* A lot of helper results, definitions and functions for (1) constructing new terms from old ones using tools for `DecoratedTree`s; (2) proving that these are still `LambdaTerm`s; and (3) extracting information from terms (AST inspection stuff).\r\n* __Beta reduction__ and __~ conversion__ formalized as binary predicates `beta->`, `beta->*`, and `beta=` on `LambdaTerm`s.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}